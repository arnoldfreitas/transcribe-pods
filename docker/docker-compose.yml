# Create networks to be used to isolate containers
# networks:
#   # Server network to hold database and backend
#   servernetwork: {}
# Create named volumes to mount to containers.
volumes:
  # Create a named volume to hold database data
  database-storage: {}
# Define services to be run.

x-common: &common
  # container_name: aicrafts/web-application
  build: 
    context: ./../
    dockerfile: docker/.dockerfile
  # networks:
  #   - servernetwork
  ports:
    - "8080:8080"
    - "3000:3000"
  image: pods/transcribe:latest
  # env_file:
  #   # Get the configuration from the dotenv file.
  #   - ./application/.example.env
  # depends_on:
  #   - database



services:
  # database:
  #   build: ./database
  #   volumes:
  #     - database-storage:/var/lib/mysql
  #   environment:
  #     # Since we didn't set any password, default root password is empty.
  #     # Make sure Mariadb accepts the empty password and runs.
  #     - MYSQL_ALLOW_EMPTY_PASSWORD=1
  #   ports:
  #     # Expose the Mysql port for local development.
  #     # This is so we can connect to the database using `localhost` or the ip of the docker host.
  #     - "3306:3306"
  #   networks:
  #     # Add the database service to the servernetwork.
  #     - servernetwork

  # docker-compose -f docker-compose.yml run --rm application
  application:
    <<: *common
    # volumes:
    #   - ./../:/home/app:r
    container_name: pods/transcribe
  
  # docker-compose -f docker-compose.yml run --rm dev
  dev:
    <<: *common
    volumes:
      - ./../:/home/app:rw
    container_name: pods/transcribe-dev
    stdin_open: true
    tty: true
    command: bash
    network_mode: host
    ports:
    - "8080:8080"
    - "4444:4444"
    privileged: true

